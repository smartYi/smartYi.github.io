{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":24,"_total":24,"_totalPage":3,"_page":3,"posts":[{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":24},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":22},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":22}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":26}],"url":"/async/posts/2016/03/17/Binary-Search-Tree-Iterator.json","date":1458190168000,"path":{"year":2016,"month":3,"day":17,"name":"Binary-Search-Tree-Iterator"},"title":"Binary Search Tree Iterator","permalink":"http://www.smartyi8979.com/2016/03/17/Binary-Search-Tree-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.<br>Calling next() will return the next smallest number in the BST.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":24},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":22},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":22}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":26}],"url":"/async/posts/2016/03/17/Number-of-Islands.json","date":1458190853000,"path":{"year":2016,"month":3,"day":17,"name":"Number-of-Islands"},"title":"Number of Islands","permalink":"http://www.smartyi8979.com/2016/03/17/Number-of-Islands/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a 2d grid map of ‘1’s (land) and ‘0’s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":24},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":22},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":22}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":26}],"url":"/async/posts/2016/03/17/Implement-Trie.json","date":1458191448000,"path":{"year":2016,"month":3,"day":17,"name":"Implement-Trie"},"title":"Implement Trie","permalink":"http://www.smartyi8979.com/2016/03/17/Implement-Trie/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement a trie with <code>insert, search</code>, and <code>startsWith</code> methods.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":24},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":22},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":22}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":26}],"url":"/async/posts/2016/03/17/Basic-Calculator.json","date":1458191933000,"path":{"year":2016,"month":3,"day":17,"name":"Basic-Calculator"},"title":"Basic Calculator","permalink":"http://www.smartyi8979.com/2016/03/17/Basic-Calculator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a valid arithmetic equation, calculate the result.<br>"}]}