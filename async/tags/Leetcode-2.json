{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82,"_total":82,"_totalPage":9,"_page":2,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Closest-Binary-Search-Tree-Value.json","date":1458320203000,"path":{"year":2016,"month":3,"day":18,"name":"Closest-Binary-Search-Tree-Value"},"title":"Closest Binary Search Tree Value","permalink":"http://www.smartyi8979.com/2016/03/18/Closest-Binary-Search-Tree-Value/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Backtracking","permalink":"http://www.smartyi8979.com/tags/Backtracking/","url":"/async/tags/Backtracking.json","count":3}],"categories":[{"name":"算法","permalink":"http://www.smartyi8979.com/categories/算法/","url":"/async/categories/算法.json","count":3}],"url":"/async/posts/2016/03/23/Combination-Sum.json","date":1458795433000,"path":{"year":2016,"month":3,"day":23,"name":"Combination-Sum"},"title":"Combination Sum I&II&III","permalink":"http://www.smartyi8979.com/2016/03/23/Combination-Sum/","content":"<h4 id=\"Problem1\"><a href=\"#Problem1\" class=\"headerlink\" title=\"Problem1:\"></a>Problem1:</h4><p>Given a set of candidate numbers (C) and a target number (T), find all unique combinations in C where the candidate numbers sums to T.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/29/Count-Complete-Tree-Nodes.json","date":1459268654000,"path":{"year":2016,"month":3,"day":29,"name":"Count-Complete-Tree-Nodes"},"title":"Count Complete Tree Nodes","permalink":"http://www.smartyi8979.com/2016/03/29/Count-Complete-Tree-Nodes/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a complete binary tree, count the number of nodes.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Expression-Add-Operators.json","date":1458242579000,"path":{"year":2016,"month":3,"day":17,"name":"Expression-Add-Operators"},"title":"Expression Add Operators","permalink":"http://www.smartyi8979.com/2016/03/17/Expression-Add-Operators/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Encode-and-Decode-Strings.json","date":1458325890000,"path":{"year":2016,"month":3,"day":18,"name":"Encode-and-Decode-Strings"},"title":"Encode and Decode Strings","permalink":"http://www.smartyi8979.com/2016/03/18/Encode-and-Decode-Strings/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Design an algorithm to encode a list of strings to a string. The encoded string is then sent over the network and is decoded back to the original list of strings.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Find-in-the-2D-matrix.json","date":1458238021000,"path":{"year":2016,"month":3,"day":17,"name":"Find-in-the-2D-matrix"},"title":"Search in the 2D matrix","permalink":"http://www.smartyi8979.com/2016/03/17/Find-in-the-2D-matrix/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:</p>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Find-Median-from-Data-Stream.json","date":1458246379000,"path":{"year":2016,"month":3,"day":17,"name":"Find-Median-from-Data-Stream"},"title":"Find Median from Data Stream","permalink":"http://www.smartyi8979.com/2016/03/17/Find-Median-from-Data-Stream/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Flatten-2D-Vector.json","date":1458305725000,"path":{"year":2016,"month":3,"day":18,"name":"Flatten-2D-Vector"},"title":"Flatten 2D Vector","permalink":"http://www.smartyi8979.com/2016/03/18/Flatten-2D-Vector/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement an iterator to flatten a 2d vector.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Flip-Game.json","date":1458350843000,"path":{"year":2016,"month":3,"day":18,"name":"Flip-Game"},"title":"Flip Game 1&2","permalink":"http://www.smartyi8979.com/2016/03/18/Flip-Game/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>You are playing the following Flip Game with your friend: Given a string that contains only these two characters: <code>+</code> and <code>-</code>, you and your friend take turns to flip two consecutive <code>&quot;++&quot;</code> into <code>&quot;--&quot;</code>. The game ends when a person can no longer make a move and therefore the other person will be the winner.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/16/Fraction-to-decimal.json","date":1458189293000,"path":{"year":2016,"month":3,"day":16,"name":"Fraction-to-decimal"},"title":"Fraction to decimal","permalink":"http://www.smartyi8979.com/2016/03/16/Fraction-to-decimal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two numbers, one is numerator and the other one is denominator.<br>return the fraction as string format.<br>"}]}