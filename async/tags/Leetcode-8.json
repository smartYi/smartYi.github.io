{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76,"_total":76,"_totalPage":8,"_page":8,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/26/Restore-IP-Addresses.json","date":1459022383000,"path":{"year":2016,"month":3,"day":26,"name":"Restore-IP-Addresses"},"title":"Restore IP Addresses","permalink":"http://www.smartyi8979.com/2016/03/26/Restore-IP-Addresses/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given a string containing only digits, restore it by returning all possible valid IP address combinations.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/26/Add-and-Search-Word.json","date":1459041693000,"path":{"year":2016,"month":3,"day":26,"name":"Add-and-Search-Word"},"title":"Add and Search Word - Data structure design","permalink":"http://www.smartyi8979.com/2016/03/26/Add-and-Search-Word/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Design a data structure that supports the following two operations:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/26/Sudoku-Solver.json","date":1459042078000,"path":{"year":2016,"month":3,"day":26,"name":"Sudoku-Solver"},"title":"Sudoku Solver","permalink":"http://www.smartyi8979.com/2016/03/26/Sudoku-Solver/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Write a program to solve a Sudoku puzzle by filling the empty cells.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/26/N-Queens.json","date":1459046673000,"path":{"year":2016,"month":3,"day":26,"name":"N-Queens"},"title":"N-Queens I&&II","permalink":"http://www.smartyi8979.com/2016/03/26/N-Queens/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>The n-queens puzzle is the problem of placing n queens on an n×n chessboard such that no two queens attack each other.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/27/Word-Ladder.json","date":1459096751000,"path":{"year":2016,"month":3,"day":27,"name":"Word-Ladder"},"title":"Word Ladder I","permalink":"http://www.smartyi8979.com/2016/03/27/Word-Ladder/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two words (beginWord and endWord), and a dictionary’s word list, find the length of shortest transformation sequence from beginWord to endWord, such that:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":76},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":77}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":79}],"url":"/async/posts/2016/03/28/Tree-Traversal.json","date":1459217721000,"path":{"year":2016,"month":3,"day":28,"name":"Tree-Traversal"},"title":"Tree Traversal","permalink":"http://www.smartyi8979.com/2016/03/28/Tree-Traversal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>这里把二叉树的前序，中序以及后序遍历的递归和迭代解法分别给出，此外还有二叉树的层序遍历，这是很多二叉树其他算法的基础。<br>"}]}