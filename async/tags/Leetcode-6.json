{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82,"_total":82,"_totalPage":9,"_page":6,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Patching-array.json","date":1458264023000,"path":{"year":2016,"month":3,"day":17,"name":"Patching-array"},"title":"Patching array","permalink":"http://www.smartyi8979.com/2016/03/17/Patching-array/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a sorted positive integer array nums and an integer n, add/patch elements to the array such that any number in range [1, n] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/16/Peak-element.json","date":1458182531000,"path":{"year":2016,"month":3,"day":16,"name":"Peak-element"},"title":"Peak element","permalink":"http://www.smartyi8979.com/2016/03/16/Peak-element/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an array, find one peak element index and return;<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Peeking-iterator.json","date":1458244120000,"path":{"year":2016,"month":3,"day":17,"name":"Peeking-iterator"},"title":"Peeking iterator","permalink":"http://www.smartyi8979.com/2016/03/17/Peeking-iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an Iterator class interface with methods: next() and hasNext(), design and implement a PeekingIterator that support the peek() operation – it essentially peek() at the element that will be returned <strong><em>by the next call to next().</em></strong><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Perfect-Squares.json","date":1458241401000,"path":{"year":2016,"month":3,"day":17,"name":"Perfect-Squares"},"title":"Perfect Squares","permalink":"http://www.smartyi8979.com/2016/03/17/Perfect-Squares/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, …) which sum to n.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/25/Permutation-Sequence.json","date":1458964918000,"path":{"year":2016,"month":3,"day":25,"name":"Permutation-Sequence"},"title":"Permutation Sequence","permalink":"http://www.smartyi8979.com/2016/03/25/Permutation-Sequence/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>The set [1,2,3,…,n] contains a total of n! unique permutations.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Backtracking","permalink":"http://www.smartyi8979.com/tags/Backtracking/","url":"/async/tags/Backtracking.json","count":3}],"categories":[{"name":"算法","permalink":"http://www.smartyi8979.com/categories/算法/","url":"/async/categories/算法.json","count":3}],"url":"/async/posts/2016/03/23/Permutations.json","date":1458799396000,"path":{"year":2016,"month":3,"day":23,"name":"Permutations"},"title":"Permutations I&II","permalink":"http://www.smartyi8979.com/2016/03/23/Permutations/","content":"<h4 id=\"Problem1\"><a href=\"#Problem1\" class=\"headerlink\" title=\"Problem1:\"></a>Problem1:</h4><p>Given a collection of distinct numbers, return all possible permutations.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/16/Plus-one.json","date":1458158981000,"path":{"year":2016,"month":3,"day":16,"name":"Plus-one"},"title":"Plus one","permalink":"http://www.smartyi8979.com/2016/03/16/Plus-one/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a number represented as an array, let one plus this number and return the new array.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Power-of-Three.json","date":1458263212000,"path":{"year":2016,"month":3,"day":17,"name":"Power-of-Three"},"title":"Power of Three","permalink":"http://www.smartyi8979.com/2016/03/17/Power-of-Three/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given an integer, write a function to determine if it is a power of three.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/15/Read-N-Characters-Given-Read4-1&2.json","date":1458069279000,"path":{"year":2016,"month":3,"day":15,"name":"Read-N-Characters-Given-Read4-1&2"},"title":"Read N Characters Given Read4 1&2","permalink":"http://www.smartyi8979.com/2016/03/15/Read-N-Characters-Given-Read4-1&2/","content":"<p><a href=\"https://leetcode.com/problems/read-n-characters-given-read4/\">Leetcode链接/Read N Characters Given Read4</a><br><a href=\"https://leetcode.com/problems/read-n-characters-given-read4-ii-call-multiple-times/\">Leetcode链接/Read N Characters Given Read4 II</a><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Reconstruct-Itinerary.json","date":1458265220000,"path":{"year":2016,"month":3,"day":17,"name":"Reconstruct-Itinerary"},"title":"Reconstruct Itinerary","permalink":"http://www.smartyi8979.com/2016/03/17/Reconstruct-Itinerary/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a list of airline tickets represented by pairs of departure and arrival airports [from, to], reconstruct the itinerary in order. All of the tickets belong to a man who departs from JFK. Thus, the itinerary must begin with <code>JFK</code>.<br>"}]}