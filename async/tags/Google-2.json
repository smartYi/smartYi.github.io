{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61,"_total":61,"_totalPage":7,"_page":2,"posts":[{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/Insert-intervals.json","date":1458158294000,"path":{"year":2016,"month":3,"day":16,"name":"Insert-intervals"},"title":"Insert intervals","permalink":"http://www.smartyi8979.com/2016/03/16/Insert-intervals/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a set of sorted intervals based on their start time and a new interval; insert this new interval and merge the intervals where necessary.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/Plus-one.json","date":1458158981000,"path":{"year":2016,"month":3,"day":16,"name":"Plus-one"},"title":"Plus one","permalink":"http://www.smartyi8979.com/2016/03/16/Plus-one/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a number represented as an array, let one plus this number and return the new array.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/Word-Break-1&2.json","date":1458159666000,"path":{"year":2016,"month":3,"day":16,"name":"Word-Break-1&2"},"title":"Word Break 1&2","permalink":"http://www.smartyi8979.com/2016/03/16/Word-Break-1&2/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given a string and a dict, check whether this string can be broken into several strings that are included in the dict.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/LRU.json","date":1458179799000,"path":{"year":2016,"month":3,"day":16,"name":"LRU"},"title":"LRU","permalink":"http://www.smartyi8979.com/2016/03/16/LRU/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Design and implement a LRU cache<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/Min-stack.json","date":1458181696000,"path":{"year":2016,"month":3,"day":16,"name":"Min-stack"},"title":"Min stack","permalink":"http://www.smartyi8979.com/2016/03/16/Min-stack/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/16/Peak-element.json","date":1458182531000,"path":{"year":2016,"month":3,"day":16,"name":"Peak-element"},"title":"Peak element","permalink":"http://www.smartyi8979.com/2016/03/16/Peak-element/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an array, find one peak element index and return;<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/17/Fraction-to-decimal.json","date":1458189293000,"path":{"year":2016,"month":3,"day":17,"name":"Fraction-to-decimal"},"title":"Fraction to decimal","permalink":"http://www.smartyi8979.com/2016/03/17/Fraction-to-decimal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two numbers, one is numerator and the other one is denominator.<br>return the fraction as string format.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/17/Binary-Search-Tree-Iterator.json","date":1458190168000,"path":{"year":2016,"month":3,"day":17,"name":"Binary-Search-Tree-Iterator"},"title":"Binary Search Tree Iterator","permalink":"http://www.smartyi8979.com/2016/03/17/Binary-Search-Tree-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.<br>Calling next() will return the next smallest number in the BST.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/17/Number-of-Islands.json","date":1458190853000,"path":{"year":2016,"month":3,"day":17,"name":"Number-of-Islands"},"title":"Number of Islands I&II","permalink":"http://www.smartyi8979.com/2016/03/17/Number-of-Islands/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>Given a 2d grid map of ‘1’s (land) and ‘0’s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":66}],"url":"/async/posts/2016/03/17/Implement-Trie.json","date":1458191448000,"path":{"year":2016,"month":3,"day":17,"name":"Implement-Trie"},"title":"Implement Trie","permalink":"http://www.smartyi8979.com/2016/03/17/Implement-Trie/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement a trie with <code>insert, search</code>, and <code>startsWith</code> methods.<br>"}]}