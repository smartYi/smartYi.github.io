{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":79},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":80}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":82}],"url":"/async/posts/2016/03/23/Surrounded-Regions.json","date":1458760983000,"path":{"year":2016,"month":3,"day":23,"name":"Surrounded-Regions"},"title":"Surrounded Regions","permalink":"http://www.smartyi8979.com/2016/03/23/Surrounded-Regions/","content":"<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>Given a 2D board containing ‘X’ and ‘O’, capture all regions surrounded by ‘X’.</p>\n<p>A region is captured by flipping all ‘O’s into ‘X’s in that surrounded region.<br><a id=\"more\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For example,</span><br><span class=\"line\">X X X X</span><br><span class=\"line\">X O O X</span><br><span class=\"line\">X X O X</span><br><span class=\"line\">X O X X</span><br><span class=\"line\">After running your function, the board should be:</span><br><span class=\"line\"></span><br><span class=\"line\">X X X X</span><br><span class=\"line\">X X X X</span><br><span class=\"line\">X X X X</span><br><span class=\"line\">X O X X</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>又是一个很典型的查找连通分量的题目，那么BFS和DFS肯定可行。但是DFS写出来之后，栈溢出。那么我们就采用BFS来解答。在这个题目中，我们需要找出所有的死棋，然后把它变为1.那么我们可以换种思路，就是找出棋盘中所有的活棋，然后标记这些活棋，那么出去活棋的就是死棋了。活棋的定义又是什么呢？就是在有一条路通向边界。于是乎，我们遍历四条边界，一旦发现活棋，进行搜索和标记。最后再置换棋子就好。</p>\n<p>AC: BFS</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">        m = board.length;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(m == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        n = board[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][<span class=\"number\">0</span>] == <span class=\"string\">'O'</span>) &#123;</span><br><span class=\"line\">                bfs(board, i, <span class=\"number\">0</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[i][n - <span class=\"number\">1</span>] ==  <span class=\"string\">'O'</span>) &#123;</span><br><span class=\"line\">                bfs(board, i, n-<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[<span class=\"number\">0</span>][i] == <span class=\"string\">'O'</span>) &#123;</span><br><span class=\"line\">                bfs(board, <span class=\"number\">0</span>, i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (board[m - <span class=\"number\">1</span>][i] == <span class=\"string\">'O'</span>) &#123;</span><br><span class=\"line\">                bfs(board, m - <span class=\"number\">1</span>, i);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (board[i][j] == <span class=\"string\">'O'</span>) board[i][j] = <span class=\"string\">'X'</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (board[i][j] == <span class=\"string\">'A'</span>) board[i][j] = <span class=\"string\">'O'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">bfs</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] board, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = board.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = board[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        Deque&lt;<span class=\"keyword\">int</span>[]&gt; queue = <span class=\"keyword\">new</span> ArrayDeque&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dx = &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] dy = &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, -<span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        queue.offer(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;x, y&#125;);</span><br><span class=\"line\">        board[x][y] = <span class=\"string\">'A'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (queue.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span>[] cur = queue.poll();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> nextX = cur[<span class=\"number\">0</span>] + dx[i];</span><br><span class=\"line\">                <span class=\"keyword\">int</span> nextY = cur[<span class=\"number\">1</span>] + dy[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nextX &gt;= <span class=\"number\">0</span> &amp;&amp; nextX &lt; m &amp;&amp; nextY &gt;= <span class=\"number\">0</span> &amp;&amp; nextY &lt; n </span><br><span class=\"line\">                    &amp;&amp; board[nextX][nextY] == <span class=\"string\">'O'</span>) &#123;</span><br><span class=\"line\">                        queue.offer(<span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;nextX, nextY&#125;);</span><br><span class=\"line\">                        board[nextX][nextY] = <span class=\"string\">'A'</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}