{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":50},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":48},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":48}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":52}],"url":"/async/posts/2016/03/17/Remove-Duplicate-Letters.json","date":1458260872000,"path":{"year":2016,"month":3,"day":17,"name":"Remove-Duplicate-Letters"},"title":"Remove Duplicate Letters","permalink":"http://www.smartyi8979.com/2016/03/17/Remove-Duplicate-Letters/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string which contains only lowercase letters, remove duplicate letters so that every letter appear once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.<br><a id=\"more\"></a></p>\n<blockquote>\n<p>Example:<br>Given “bcabc”<br>Return “abc”</p>\n<p>Given “cbacdcbc”<br>Return “acdb”</p>\n</blockquote>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>不同于之前的删除数组重复元素，这次的删除字符串中重复字符。有两个难点：</p>\n<ul>\n<li>首先字符串不是排好序的；</li>\n<li>在不是排好序的情况下，要求我们返回字典序最小的字符串；</li>\n</ul>\n<p>(吐槽：这不是为难人嘛)<br>继续：对于这种字符串题目，真的是无从下手啊。然后看了一下题目的标签，stack。嗯！还是没什么思路，然后偷偷的看了下讨论区。解法还是很巧妙啊。</p>\n<ul>\n<li>首先统计每个字符出现的个数，以作为后面是否添加和pop的根据；</li>\n<li>预设一个大小为26的boolean数组，用来标记当前字符串是否已经用到当前字符；</li>\n<li>如果当前字符串没有用到目前字符，要把当前字符插入到合法的字典序最小的位置；</li>\n<li>然后继续。。。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">removeDuplicateLetters</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span> || s.length() == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] count = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[] used = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[<span class=\"number\">26</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">            count[s.charAt(i) - <span class=\"string\">'a'</span>]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        Deque&lt;Character&gt; deque = <span class=\"keyword\">new</span> ArrayDeque&lt;&gt;();</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">            count[s.charAt(i) - <span class=\"string\">'a'</span>]--;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">if</span> (used[s.charAt(i) - <span class=\"string\">'a'</span>]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!deque.isEmpty() &amp;&amp; deque.peek() &gt; s.charAt(i) &amp;&amp; count[deque.peek() - <span class=\"string\">'a'</span>] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果栈顶字符大于当前字符，且栈顶字符在后面还会出现，pop出去。</span></span><br><span class=\"line\">                used[deque.pop() - <span class=\"string\">'a'</span>] = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            deque.push(s.charAt(i));</span><br><span class=\"line\">            used[s.charAt(i) - <span class=\"string\">'a'</span>] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!deque.isEmpty()) &#123;</span><br><span class=\"line\">            sb.append(deque.pop());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sb.reverse().toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}