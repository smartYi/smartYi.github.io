{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":68},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":69}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":71}],"url":"/async/posts/2016/03/17/Wiggle-sort.json","date":1458262642000,"path":{"year":2016,"month":3,"day":17,"name":"Wiggle-sort"},"title":"Wiggle sort 1&2","permalink":"http://www.smartyi8979.com/2016/03/17/Wiggle-sort/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>Given an unsorted array nums, reorder it in-place such that <code>nums[0] &lt;= nums[1] &gt;= nums[2] &lt;= nums[3]....</code><br><a id=\"more\"></a><br>For example, given <code>nums = [3, 5, 2, 1, 6, 4]</code>, one possible answer is <code>[1, 6, 2, 5, 3, 4]</code>.</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>题目的要求是<code>nums[0] &lt;= nums[1] &gt;= nums[2] &lt;= nums[3]...</code>，也就是位于偶数位置的(不是下标数字)不小于左右奇数位置的数。那么就可以分两种情况：</p>\n<ul>\n<li>1: 偶数位置的数字小于它前面的奇数位置上的数，那么进行交换；</li>\n<li>2: 奇数位置上的数字大于它前面的偶数位置上的数，那么进行交换；</li>\n<li>3: 为什么上面两步就一定能保证最终结果是摆动有序呢？ <ul>\n<li>1） 如果偶数位置的数字小于它前面的奇数位置上的数，交换之后，当前偶数位置的数字就不小于它之前奇数上位置的数，这时候它右边奇数上的位置的数字只可能有两种情况，大于交换后的当前偶数位置的数和小于当前偶数位置的数；小于不用理会；如果大于的话，按照上面分析，也要进行交换，又因为当前偶数位置的数已经不小于它之前奇数位置的数，而且偶数位置右边的奇数位置数大于当前数，那么就算进行当前交换之后，当前偶数位置的数字也会不小于其左边奇数位置的数；</li>\n<li>2） 奇数位置上的情况可以同样分析得到；</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wiggleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums == <span class=\"keyword\">null</span> || nums.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">// 需要交换的情况：奇数时nums[i] &lt; nums[i - 1]或偶数时nums[i] &gt; nums[i - 1]</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>((i % <span class=\"number\">2</span> == <span class=\"number\">1</span> &amp;&amp; nums[i] &lt; nums[i-<span class=\"number\">1</span>]) || (i % <span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; nums[i] &gt; nums[i-<span class=\"number\">1</span>]))&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> tmp = nums[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">                nums[i-<span class=\"number\">1</span>] = nums[i];</span><br><span class=\"line\">                nums[i] = tmp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Problem-2\"><a href=\"#Problem-2\" class=\"headerlink\" title=\"Problem 2:\"></a>Problem 2:</h4><p>Given an unsorted array nums, reorder it such that <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]....</code></p>\n<h4 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>本题和上题不一样的地方在于；最终的结果不再是<code>nums[0] &lt;= nums[1] &gt;= nums[2] &lt;= nums[3]...</code>， 而是<code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>。<br>我们来看一个例子：</p>\n<blockquote>\n<p>对于[4,5,5,6]这个数组来说，已经满足第一题的题意，但是对于第二题来说，显然不符合。因为第二题要求偶数位置严格大于左右数字。也就是说[5,6,4,5]才是其中一个合理的答案。</p>\n</blockquote>\n<p>首先来看一个时间复杂度是\\(O(nlogn)\\)的算法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wiggleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums == <span class=\"keyword\">null</span> || nums.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        Arrays.sort(nums);</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[nums.length];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> s = (nums.length + <span class=\"number\">1</span>) &gt;&gt; <span class=\"number\">1</span>, t = nums.length;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            temp[i] = (i &amp; <span class=\"number\">1</span>) == <span class=\"number\">0</span> ?  nums[--s] : nums[--t] ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++)</span><br><span class=\"line\">            nums[i] = temp[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>首先对数组进行排序，然后从中间元素开始，左半部分放在奇数位置，右半部分放在偶数位置。</p>\n<p>然后可以看看一种更好的算法，时间复杂度是\\(O(n)\\).<br>这里需要用到快速选择算法，也就是快速排序的切割部分。</p>\n<p>quick select.<br>快速选择的重要点在于牢牢记住，一个萝卜一个坑。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//k here means kth largest element in array.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">quickSelect</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> L = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> R = nums.length;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (L &lt; R) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> left = L;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> right = R;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> pivot = nums[left];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(left &lt; right &amp;&amp; nums[right] &lt;= pivot) right--;</span><br><span class=\"line\">\t\t\tnums[left] = nums[right];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[left] &gt; pivot) left++;</span><br><span class=\"line\">\t\t\tnums[right] = nums[left];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tnums[left] = pivot;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (left + <span class=\"number\">1</span> == k) <span class=\"keyword\">return</span> nums[left];</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k &gt; left + <span class=\"number\">1</span>) &#123; </span><br><span class=\"line\">\t\t\tL = left + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tR = left - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> nums[k - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面的快速选择是找出数组中第k大的数字。同样的还可以通过快速排序找出数组中第k小的数字。记住的是，<strong>如果pivot选定最左边元素，那么坑就是从左边开始挖起的，因此第一个循环必须是从右边开始；反之一样。</strong></p>\n<p>下面给出找出数组中第k小的数字；</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">quickSelect</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> L = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> R = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (L &lt; R) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> left = L;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> right = R;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> pivot = nums[left];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[right] &gt; pivot) right--;</span><br><span class=\"line\">                nums[left] = nums[right];</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[left] &lt;= pivot) left++;</span><br><span class=\"line\">                nums[right] = nums[left];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            nums[left] = pivot;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (k == left + <span class=\"number\">1</span>) <span class=\"keyword\">return</span> nums[left];</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k &gt; left + <span class=\"number\">1</span>) L = left + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> R = left - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nums[k - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们可以通过快速排序找出数组中第\\((length + 1) / 2\\)小的数字，接下来的思路就和之前排序的思路是一样的了。<br>因此这道题目的最终结果是：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">wiggleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums == <span class=\"keyword\">null</span> || nums.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[nums.length];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) temp[i] = nums[i];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = quickSelect(temp, (temp.length + <span class=\"number\">1</span> ) / <span class=\"number\">2</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            nums[i] = i % <span class=\"number\">2</span> == <span class=\"number\">0</span>? temp[index--] : temp[length--];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">quickSelect</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> L = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> R = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (L &lt; R) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> left = L;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> right = R;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> pivot = nums[left];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[right] &gt; pivot) right--;</span><br><span class=\"line\">                nums[left] = nums[right];</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[left] &lt;= pivot) left++;</span><br><span class=\"line\">                nums[right] = nums[left];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            nums[left] = pivot;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (k == left + <span class=\"number\">1</span>) <span class=\"keyword\">return</span> left;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k &gt; left + <span class=\"number\">1</span>) L = left + <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> R = left - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> k - <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}