{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":65},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":61}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":67}],"url":"/async/posts/2016/03/17/Group-Shifted-Strings.json","date":1458270330000,"path":{"year":2016,"month":3,"day":17,"name":"Group-Shifted-Strings"},"title":"Group Shifted Strings","permalink":"http://www.smartyi8979.com/2016/03/17/Group-Shifted-Strings/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string, we can “shift” each of its letter to its successive letter, for example: <code>&quot;abc&quot; -&gt; &quot;bcd&quot;</code>. We can keep “shifting” which forms the sequence:<br><a id=\"more\"></a></p>\n<p><code>&quot;abc&quot; -&gt; &quot;bcd&quot; -&gt; ... -&gt; &quot;xyz&quot;</code></p>\n<p>Given a list of strings which contains only lowercase alphabets, group all strings that belong to the same shifting sequence.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For example, given: [&quot;abc&quot;, &quot;bcd&quot;, &quot;acef&quot;, &quot;xyz&quot;, &quot;az&quot;, &quot;ba&quot;, &quot;a&quot;, &quot;z&quot;], </span><br><span class=\"line\">Return:</span><br><span class=\"line\"></span><br><span class=\"line\">[</span><br><span class=\"line\">  [&quot;abc&quot;,&quot;bcd&quot;,&quot;xyz&quot;],</span><br><span class=\"line\">  [&quot;az&quot;,&quot;ba&quot;],</span><br><span class=\"line\">  [&quot;acef&quot;],</span><br><span class=\"line\">  [&quot;a&quot;,&quot;z&quot;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>给定一个string数组，将能够通过shift得到的字符串绑在一起。<br>通过偏移量来解决这个问题。如果两个字符串之间能够通过shift来得到，那么在每个字符串中的每个字符之间的差值肯定相同。那我们就可以把一个字符串作为基准字符串，而对于其他字符串我们通过偏移看是否能够得到这个基准字符串，如果可以，那么就把这些字符串捆绑在一起。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;List&lt;String&gt;&gt; groupStrings(String[] strings) &#123;</span><br><span class=\"line\">        List&lt;List&lt;String&gt;&gt; ret = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (strings == <span class=\"keyword\">null</span> || strings.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        Map&lt;String, List&lt;String&gt;&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; strings.length; i++) &#123;</span><br><span class=\"line\">            String cur = strings[i];</span><br><span class=\"line\">            <span class=\"comment\">//计算偏移量</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> offset = cur.charAt(<span class=\"number\">0</span>) - <span class=\"string\">'a'</span>;</span><br><span class=\"line\">            StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; cur.length(); j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">char</span> next = (<span class=\"keyword\">char</span>)(cur.charAt(j) - offset);</span><br><span class=\"line\">                <span class=\"comment\">//如果偏移过大，需要做成一个偏移环。</span></span><br><span class=\"line\">                next = next &lt; <span class=\"string\">'a'</span>? (<span class=\"keyword\">char</span>)(next + <span class=\"number\">26</span>) : next;</span><br><span class=\"line\">                sb.append(next);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            String key = sb.toString();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!map.containsKey(key)) &#123;</span><br><span class=\"line\">                map.put(key, <span class=\"keyword\">new</span> ArrayList&lt;&gt;());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            map.get(key).add(cur);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Iterator iterator = map.entrySet().iterator();</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;</span><br><span class=\"line\">            Map.Entry entry = (Map.Entry) iterator.next();</span><br><span class=\"line\">            List&lt;String&gt; value = (List&lt;String&gt;)entry.getValue();</span><br><span class=\"line\">            <span class=\"comment\">//保证按字典序递增。</span></span><br><span class=\"line\">            Collections.sort(value);</span><br><span class=\"line\">            ret.add(value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}