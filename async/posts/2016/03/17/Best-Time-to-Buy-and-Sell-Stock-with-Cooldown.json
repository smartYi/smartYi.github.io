{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":71},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":72}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":74}],"url":"/async/posts/2016/03/17/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown.json","date":1458247259000,"path":{"year":2016,"month":3,"day":17,"name":"Best-Time-to-Buy-and-Sell-Stock-with-Cooldown"},"title":"Best Time to Buy and Sell Stock with Cooldown","permalink":"http://www.smartyi8979.com/2016/03/17/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Say you have an array for which the ith element is the price of a given stock on day i.<br><a id=\"more\"></a></p>\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions:</p>\n<ul>\n<li>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</li>\n<li>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</li>\n</ul>\n<p>Example:</p>\n<blockquote>\n<p>prices = [1, 2, 3, 0, 2]<br>maxProfit = 3<br>transactions = [buy, sell, cooldown, buy, sell]</p>\n</blockquote>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>维护两个dp数组，一个叫做sell，一个叫做buy。</p>\n<ul>\n<li><code>sell[i]</code>代表的是在第$i$天卖出股票所能获得里利润，那么它的状态转移方程是：\\(sell[i]=max(buy[i-1]+prices[i], sell[i-1]+offset)\\)<br>其中<code>prices[i]</code>代表今日股票价格，\\(offset\\)代表\\(prices[i]-prics[i-1]\\),也就是说第\\(i\\)天卖出股票所获得利润为：<ul>\n<li>第\\(i-1\\)天买入股票时的利润加上今天股价；</li>\n<li>第\\(i-1\\)天卖出后反悔，到今天再卖出的利润；</li>\n<li>这里反悔的意思代表，不同于第\\(i-1\\)天持有股票并且卖出，我今天依旧持有股票且今天卖出；</li>\n<li>今天卖出的利润取上述两者之间的最大值；</li>\n</ul>\n</li>\n<li><code>buy[i]</code>代表第<code>i</code>天买入时的利润，那么它的状态转移方程是：<br>\\(buy[i] = max(buy[i-1]-offset, sell[i-2]-prices[i])\\)<br>也就是说第\\(i\\)天买入股票所能获得的利润<ul>\n<li>第\\(i-1\\)天买入，但反悔改为今天买入所能获得的利润；</li>\n<li>第\\(i-2\\)天卖出，今天买入时所能获得的利润，因为存在cooldown；</li>\n</ul>\n</li>\n</ul>\n<p>值得注意的是，这两个dp数组代表的都是利润。<br>有了这两个利润数组，我们的目的就是找出sell数组中的最大值，因为只有在sell，也就是卖出的过程中才能获得最大值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxProfit</span><span class=\"params\">(<span class=\"keyword\">int</span>[] prices)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (prices == <span class=\"keyword\">null</span> || prices.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = prices.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] sells = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[length];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] buys = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[length];</span><br><span class=\"line\">        </span><br><span class=\"line\">        sells[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        buys[<span class=\"number\">0</span>] = -prices[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> maximum = sells[<span class=\"number\">0</span>];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;length;i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> offset = prices[i] - prices[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">            sells[i] = Math.max(sells[i-<span class=\"number\">1</span>]+offset, buys[i-<span class=\"number\">1</span>]+prices[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sells[i] &gt; maximum) maximum = sells[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i&gt;=<span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                buys[i] = Math.max(buys[i-<span class=\"number\">1</span>]-offset, sells[i-<span class=\"number\">2</span>] - prices[i]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                buys[i] = buys[i-<span class=\"number\">1</span>] - offset;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> maximum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}