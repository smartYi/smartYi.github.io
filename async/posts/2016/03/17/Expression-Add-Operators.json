{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":43},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":41},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":41}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":45}],"url":"/async/posts/2016/03/17/Expression-Add-Operators.json","date":1458242579000,"path":{"year":2016,"month":3,"day":17,"name":"Expression-Add-Operators"},"title":"Expression Add Operators","permalink":"http://www.smartyi8979.com/2016/03/17/Expression-Add-Operators/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string that contains only digits 0-9 and a target value, return all possibilities to add binary operators (not unary) +, -, or * between the digits so they evaluate to the target value.<br><a id=\"more\"></a></p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>哎，又是一个很难的题目。<br>Using DFS. Maintain two variables to indicate current accumulation and to be operated this time. What should be mentioned is that when multiply an equation, special cases should be considered.</p>\n<p>意思就是利用DFS，这一点还是可以想到。如果只是单纯的相加减，还是比较简单的，但是这里还有一种可能性就是乘法。由于乘法的优先级是大于加减法的，所以就必须要特殊考虑。那我们在这里维护两个变量，一个用于统计当前已经得到的数值，一个用于当前即将操作的数。</p>\n<p>举个栗子： <code>4+2*5</code><br>那我们在计算过程中当我们开始乘以5的时候，我们当前统计的数值是6，也就是\\(4+2\\)，接下来即将操作的数是5，上一个即将被操作的数是2，那么我们这里应该用当前统计的值6减去上一次即将操作的数2，再加上上一次即将被操作的数2乘以当前即将被操作的数5。那么也就是\\((6-2) + 2*5 = 14\\)。很抽象，不好理解。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">addOperators</span><span class=\"params\">(String num, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; ret = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num == <span class=\"keyword\">null</span> || num.length() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String cur = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        helper(num, (<span class=\"keyword\">long</span>)target, cur, ret, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">helper</span><span class=\"params\">(String num, <span class=\"keyword\">long</span> target, String cur, List&lt;String&gt; ret, <span class=\"keyword\">long</span> curNum, <span class=\"keyword\">long</span> diff)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//Diff variable to store current to be operated, specially for multiply case. </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num.length() == <span class=\"number\">0</span> &amp;&amp; target == curNum) &#123;</span><br><span class=\"line\">            ret.add(cur);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = num.length();</span><br><span class=\"line\">        <span class=\"comment\">//这里的循环是为了枚举所有情况</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= length; i++) &#123;</span><br><span class=\"line\">            String curStr = num.substring(<span class=\"number\">0</span>, i);</span><br><span class=\"line\">            <span class=\"comment\">//当前即将被操作的数。</span></span><br><span class=\"line\">            <span class=\"keyword\">long</span> temp = Long.parseLong(curStr);</span><br><span class=\"line\">            String next = num.substring(i);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (curStr.length() &gt; <span class=\"number\">1</span> &amp;&amp; curStr.charAt(<span class=\"number\">0</span>) == <span class=\"string\">'0'</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cur.length() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                helper(next, target, cur + <span class=\"string\">\"+\"</span> + temp, ret, curNum + temp, temp);</span><br><span class=\"line\">                helper(next, target, cur + <span class=\"string\">\"-\"</span> + temp, ret, curNum - temp, -temp);</span><br><span class=\"line\">                helper(next, target, cur + <span class=\"string\">\"*\"</span> + temp, ret, (curNum - diff) + diff * temp, diff * temp);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                helper(next, target, curStr, ret, temp, temp);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>很难。</p>\n"}