{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":33},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":31},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":31}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":35}],"url":"/async/posts/2016/03/17/Fraction-to-decimal.json","date":1458189293000,"path":{"year":2016,"month":3,"day":17,"name":"Fraction-to-decimal"},"title":"Fraction to decimal","permalink":"http://www.smartyi8979.com/2016/03/17/Fraction-to-decimal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two numbers, one is numerator and the other one is denominator.<br>return the fraction as string format.<br><a id=\"more\"></a></p>\n<h4 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h4><p>给定两个数，一个作为分子，一个作为分母，然后叫你求出这个分数的小数形式，以字符串表示。如果出现无限循环小数，则循环部分用<code>()</code>括起来。<br>比如： \\(1/3 ＝ 0.(3)\\)  </p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>这个题目也是很难，主要考察数学和数据结构的灵活使用相关知识。我们知道，在数学中，如果出现无限循环小数的情况，那么代表这是一种我们可以捕捉的规律，而这种规律在计算中的体现就是每次计算后余数出现相同的情况。但凡在某次下出现的余数在之前出现过，那么意味着在这之后的所有余数会经历之前一样的变化情况。知道这个之后，我们就可以利用数据结构来处理这样的情况，这里我们用到的是map，储存的信息每个余数出现的情况下目前小数的长度，这样当下次再次出现这个余数时，我们就能够知道上一次出现余数的位置，从而往这个位置添加小括号。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">fractionToDecimal</span><span class=\"params\">(<span class=\"keyword\">int</span> numerator, <span class=\"keyword\">int</span> denominator)</span> </span>&#123;</span><br><span class=\"line\">     String ret = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (denominator == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">     <span class=\"keyword\">if</span> ((numerator &lt; <span class=\"number\">0</span> &amp;&amp; denominator &gt; <span class=\"number\">0</span>) </span><br><span class=\"line\">        || (numerator &gt; <span class=\"number\">0</span> &amp;&amp; denominator &lt; <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">            sb.append(<span class=\"string\">\"-\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> num = Math.abs((<span class=\"keyword\">long</span>)numerator);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> den = Math.abs((<span class=\"keyword\">long</span>)denominator);</span><br><span class=\"line\">     sb.append(num / den);</span><br><span class=\"line\">     <span class=\"keyword\">long</span> remainder = num % den;</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (remainder == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> sb.toString();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     sb.append(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">     Map&lt;Long, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">     map.put(remainder, sb.length());</span><br><span class=\"line\">     <span class=\"keyword\">while</span> (remainder != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">         remainder *= <span class=\"number\">10</span>;</span><br><span class=\"line\">         sb.append(remainder / den);</span><br><span class=\"line\">         remainder = remainder % den;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (map.containsKey(remainder)) &#123;</span><br><span class=\"line\">             <span class=\"keyword\">int</span> pos = map.get(remainder);</span><br><span class=\"line\">             sb.insert(pos, <span class=\"string\">\"(\"</span>);</span><br><span class=\"line\">             sb.append(<span class=\"string\">\")\"</span>);</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">         &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">             map.put(remainder, sb.length());</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>当然我们还是要考虑符号正负情况。此外这里转为long型数据纯粹是因为Leetcode test case。但是思路按照上面讲的是没错的。-_-##</p>\n"}