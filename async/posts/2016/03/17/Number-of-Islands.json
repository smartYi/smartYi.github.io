{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":54},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":52},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":52}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":56}],"url":"/async/posts/2016/03/17/Number-of-Islands.json","date":1458190853000,"path":{"year":2016,"month":3,"day":17,"name":"Number-of-Islands"},"title":"Number of Islands","permalink":"http://www.smartyi8979.com/2016/03/17/Number-of-Islands/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a 2d grid map of ‘1’s (land) and ‘0’s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.<br><a id=\"more\"></a></p>\n<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>求解岛屿数量。给定一个二维数组，1代表陆地，0代表水。岛屿意味着周围被水包围(垂直和水平方向，不包含对角线方向)。且整个数组周围都是水。</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>典型的union find题目。给定一组连通图，求出连通图的个数。</p>\n<p>DFS和BFS都行。每次走过一个陆地之后，把它变成水，这样之后就不会再次走到了。  </p>\n<p>这里是DFS版。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> m;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">numIslands</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] grid)</span> </span>&#123;</span><br><span class=\"line\">        m = grid.length;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(m == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        n = grid[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(grid[i][j] != <span class=\"string\">'1'</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                <span class=\"comment\">//只要是陆地，证明是一块新的岛屿。</span></span><br><span class=\"line\">                count++;</span><br><span class=\"line\">                dfs(grid, i , j);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">char</span>[][] grid, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i &lt; <span class=\"number\">0</span> || i &gt;= m || j &lt; <span class=\"number\">0</span> || j &gt;= n) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(grid[i][j] == <span class=\"string\">'1'</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//把走过的陆地变成水。</span></span><br><span class=\"line\">            grid[i][j] = <span class=\"string\">'0'</span>;</span><br><span class=\"line\">            dfs(grid, i-<span class=\"number\">1</span>, j);</span><br><span class=\"line\">            dfs(grid, i+<span class=\"number\">1</span>, j);</span><br><span class=\"line\">            dfs(grid, i, j-<span class=\"number\">1</span>);</span><br><span class=\"line\">            dfs(grid, i, j+<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>比较简单的union find题目，重点是要看破本质啊。 -_-#。</p>\n"}