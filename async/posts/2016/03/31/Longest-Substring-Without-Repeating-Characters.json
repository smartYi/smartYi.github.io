{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/31/Longest-Substring-Without-Repeating-Characters.json","date":1459386801000,"path":{"year":2016,"month":3,"day":31,"name":"Longest-Substring-Without-Repeating-Characters"},"title":"Longest Substring Without Repeating Characters","permalink":"http://www.smartyi8979.com/2016/03/31/Longest-Substring-Without-Repeating-Characters/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for “abcabcbb” is “abc”, which the length is 3. For “bbbbb” the longest substring is “b”, with the length of 1.<br><a id=\"more\"></a></p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>给定一个字符串，找出最长子串，子串满足必须只含有unique字符。  </p>\n<ul>\n<li>双指针</li>\n<li>hash table</li>\n</ul>\n<ol>\n<li>双指针： 利用一前一后指针来求解。前指针用来遍历，后指针用来删除。再加上hashset保证unique，就能解答出来。</li>\n<li>hash table。 hashtable的方法比set好的一点就是，利用hash table储存字符对应的位置，然后遇到相同字符时，更新start 指针即可。而不用逐个删除。</li>\n</ol>\n<p>AC1:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span> || s.length() == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ret = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        Set&lt;Character&gt; added = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> start = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> end = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; end &lt; arr.length; end++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> cur = arr[end];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (added.contains(cur)) &#123;</span><br><span class=\"line\">                ret = Math.max(ret, end - start);</span><br><span class=\"line\">                added.remove(arr[start++]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            added.add(cur);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Math.max(ret, end - start);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>耗时： 22ms。</p>\n<p>AC2:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s == <span class=\"keyword\">null</span> || s.length() == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ret = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        Map&lt;Character, Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\">        <span class=\"comment\">//为了保证计算的统一性，将start初始为－1.</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> start = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> end = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; end &lt; arr.length; end++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> cur = arr[end];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (map.containsKey(cur)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果存在duplicates，从最大的start开始。</span></span><br><span class=\"line\">                start = Math.max(start, map.get(cur));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            ret = Math.max(ret, end - start);</span><br><span class=\"line\">            map.put(cur, end);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>耗时： 16ms。</p>\n"}