{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":13},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":12},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":12}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":15}],"url":"/async/posts/2016/03/16/Generate-Parentheses.json","date":1458157111000,"path":{"year":2016,"month":3,"day":16,"name":"Generate-Parentheses"},"title":"Generate Parentheses","permalink":"http://www.smartyi8979.com/2016/03/16/Generate-Parentheses/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a number, generate n pairs of valid parentheses.<br><a id=\"more\"></a></p>\n<h4 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h4><p>Use two index to indicate the left number of right and left parenthese respectively.</p>\n<h4 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h4><p>给定一个数字n，然后产生所有可能的合法的n对小括号。</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>经典的递归题目。  </p>\n<ul>\n<li>利用两个变量来标记剩余的左右括号的数量，刚开始的时候都是n；</li>\n<li>每次添加一个左括号，左括号数量减一；反之亦然；</li>\n<li>如果剩余右括号的数量小于左括号的数量，则这种情况肯定是非法括号对，因为每一个左括号必须配一个右括号；</li>\n<li>递归调用，直至左右括号数量都为0.</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Solution &#123;</span><br><span class=\"line\">    public List&lt;String&gt; generateParenthesis(int n) &#123;</span><br><span class=\"line\">        List&lt;String&gt; ret = new ArrayList&lt;&gt;();</span><br><span class=\"line\">        if (n &lt;= 0) return ret;</span><br><span class=\"line\">        String cur = &quot;&quot;;</span><br><span class=\"line\">        helper(n ,n, cur, ret);</span><br><span class=\"line\">        return ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private void helper(int right, int left, String cur, List&lt;String&gt; ret) &#123;</span><br><span class=\"line\">        if (left &gt; right) return;</span><br><span class=\"line\">        if (right == 0 &amp;&amp; left == 0) &#123;</span><br><span class=\"line\">            ret.add(cur);</span><br><span class=\"line\">            return;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (left &gt; 0) &#123;</span><br><span class=\"line\">            helper(right, left - 1, cur + &quot;(&quot;, ret);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (right &gt; 0) &#123;</span><br><span class=\"line\">            helper(right - 1, left, cur + &quot;)&quot;, ret);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}