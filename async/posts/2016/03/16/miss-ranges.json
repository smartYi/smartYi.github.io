{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":15},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":14},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":14}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":17}],"url":"/async/posts/2016/03/16/miss-ranges.json","date":1458108138000,"path":{"year":2016,"month":3,"day":16,"name":"miss-ranges"},"title":"Missing Ranges","permalink":"http://www.smartyi8979.com/2016/03/16/miss-ranges/","content":"<p><a href=\"https://leetcode.com/problems/missing-ranges/\" target=\"_blank\" rel=\"external\">Leetcode链接/Missing Ranges</a></p>\n<h4 id=\"Problem-Missing-Ranges\"><a href=\"#Problem-Missing-Ranges\" class=\"headerlink\" title=\"Problem: Missing Ranges\"></a>Problem: Missing Ranges</h4><p>Given a sorted integer array where the range of elements are [lower, upper] inclusive, return its missing ranges.<br><a id=\"more\"></a><br>For example, given <code>[0, 1, 3, 50, 75]</code>, lower = <code>0</code>and upper = <code>99</code>, return <code>[&quot;2&quot;, &quot;4-&gt;49&quot;, &quot;51-&gt;74&quot;, &quot;76-&gt;99&quot;]</code>.  </p>\n<h4 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h4><p>好不容易遇到一个简单的题目，真是不容易。直接上代码了，小心一点就不会出错。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Solution &#123;</span><br><span class=\"line\">    public List&lt;String&gt; findMissingRanges(int[] nums, int lower, int upper) &#123;</span><br><span class=\"line\">        List&lt;String&gt; ret = new ArrayList&lt;&gt;();</span><br><span class=\"line\">        if (upper &lt; lower || nums == null) return ret;</span><br><span class=\"line\">        int length = nums.length;</span><br><span class=\"line\">        if (length == 0) &#123;</span><br><span class=\"line\">            String temp = lower == upper?&quot;&quot;+lower : lower + &quot;-&gt;&quot; + upper;</span><br><span class=\"line\">            ret.add(temp);</span><br><span class=\"line\">            return ret;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        int i;</span><br><span class=\"line\">        for (i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">            int cur = nums[i];</span><br><span class=\"line\">            if (i == 0 &amp;&amp; lower &lt; cur) &#123;</span><br><span class=\"line\">                if (cur - lower == 1) &#123;</span><br><span class=\"line\">                    ret.add(String.valueOf(lower));</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    ret.add(lower + &quot;-&gt;&quot; + (cur - 1));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; else if (i &gt;= 1 &amp;&amp; cur - nums[i-1] != 1) &#123;</span><br><span class=\"line\">                int prev = nums[i-1];</span><br><span class=\"line\">                if (cur - prev == 2) &#123;</span><br><span class=\"line\">                    ret.add(String.valueOf(prev + 1));</span><br><span class=\"line\">                &#125; else &#123;</span><br><span class=\"line\">                    ret.add((prev + 1) + &quot;-&gt;&quot; + (cur - 1));</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        if (nums[nums.length - 1] &lt; upper) &#123;</span><br><span class=\"line\">            if (upper - nums[nums.length - 1] == 1) &#123;</span><br><span class=\"line\">                ret.add(String.valueOf(upper));</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                ret.add((nums[nums.length - 1] + 1) + &quot;-&gt;&quot; + upper);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}