{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":65},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/16/Min-stack.json","date":1458181696000,"path":{"year":2016,"month":3,"day":16,"name":"Min-stack"},"title":"Min stack","permalink":"http://www.smartyi8979.com/2016/03/16/Min-stack/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.<br><a id=\"more\"></a></p>\n<h4 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h4><p>题目要求我们实现一个栈，并且能在\\(O(1)\\)时间完成当前stack中的最小值。<br>如果有看过java中栈是怎么实现的话，那么这道题的思路其实也就清晰多了。<br>我们知道，对于栈的实现有两种方法，其一就是顺序存储，也就是数组实现的；其二是链式存储，也就是用链表实现的。那么在这里我们需要用那种方案进行实现了，数组也是可以的，但是每一个数组元素里面要包含两个信息，当前值和当前最小值；那么如果用链表的话，我们只要自己设计一个node就好了，里面可以包含我们需要的信息。<br>那我在这里采用链式存储方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MinStack</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkedListNode</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min;</span><br><span class=\"line\">        LinkedListNode next;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LinkedListNode</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> min)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.val = x;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.min = min;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.next = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">     <span class=\"keyword\">private</span> LinkedListNode head;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">push</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            head = <span class=\"keyword\">new</span> LinkedListNode(x,x);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            LinkedListNode newHead = <span class=\"keyword\">new</span> LinkedListNode(x,Math.min(x,head.min));</span><br><span class=\"line\">            newHead.next = head;</span><br><span class=\"line\">            head = newHead;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(head != <span class=\"keyword\">null</span>) head = head.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">top</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head.val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getMin</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> head.min;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>了解栈的两种实现方法也是挺重要的。这里又顺带复习一遍。</p>\n"}