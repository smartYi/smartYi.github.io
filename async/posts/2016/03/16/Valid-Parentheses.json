{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":13},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":12},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":12}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":15}],"url":"/async/posts/2016/03/16/Valid-Parentheses.json","date":1458156859000,"path":{"year":2016,"month":3,"day":16,"name":"Valid-Parentheses"},"title":"Valid Parentheses","permalink":"http://www.smartyi8979.com/2016/03/16/Valid-Parentheses/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string, valid if this is a valid parentheses.<br><a id=\"more\"></a></p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>经典的栈题目。遇见左括号，推入栈；遇见右括号，进行匹配。最后返回栈的大小是否为0.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Solution &#123;</span><br><span class=\"line\">    public boolean isValid(String s) &#123;</span><br><span class=\"line\">        if (s.length() == 0) &#123;</span><br><span class=\"line\">            return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Deque&lt;Character&gt; deque = new ArrayDeque&lt;&gt;();</span><br><span class=\"line\">        for (int i = 0; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">            char cur = s.charAt(i);</span><br><span class=\"line\">            if (deque.isEmpty()) &#123;</span><br><span class=\"line\">                deque.push(cur);</span><br><span class=\"line\">            &#125; else if (cur - deque.peek() == 1 || cur - deque.peek() == 2) &#123;</span><br><span class=\"line\">                deque.pop();</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                deque.push(cur);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return deque.isEmpty();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}