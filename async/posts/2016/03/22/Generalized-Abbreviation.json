{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":68}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":70}],"url":"/async/posts/2016/03/22/Generalized-Abbreviation.json","date":1458693227000,"path":{"year":2016,"month":3,"day":22,"name":"Generalized-Abbreviation"},"title":"Generalized Abbreviation","permalink":"http://www.smartyi8979.com/2016/03/22/Generalized-Abbreviation/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Write a function to generate the generalized abbreviations of a word.<br><a id=\"more\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Example:</span><br><span class=\"line\">Given word = &quot;word&quot;,</span><br><span class=\"line\">return the following list (order does not matter):</span><br><span class=\"line\">[&quot;word&quot;, &quot;1ord&quot;, &quot;w1rd&quot;, &quot;wo1d&quot;, &quot;wor1&quot;, &quot;2rd&quot;, &quot;w2d&quot;, &quot;wo2&quot;, &quot;1o1d&quot;, &quot;1or1&quot;, &quot;w1r1&quot;, &quot;1o2&quot;, &quot;2r1&quot;, &quot;3d&quot;, &quot;w3&quot;, &quot;4&quot;]</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>看到这个题目，本来没什么思路，因为根本不知道他讲的Abbreviation是什么鬼，但是一看例子，在仔细看一下例子的形式，明白了。递归，再具体点就是<strong>回溯法</strong>。那么其实除了回溯法，还有一种更加直观的方法，就是bit manipulation。还记得之前我们写subset的时候，除了利用回溯法，bit方法可是比回溯法更加容易理解，这里也不意外。<br>首先来看回溯法，回溯法有很明显的模式可以进行套，当然套用模版的前提是你的理解题目的含义，以及你要保护的现场是什么东西；<br>然后就是bit方法，由于每个整数都有一个独有的二进制，那么二进制中的<code>0</code>代表不选择当前字符，<code>1</code>代表选当前字符，直观，简单，容易实现。</p>\n<p>AC1: BT</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">generateAbbreviations</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; ret = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        String cur = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        helper(ret, cur, <span class=\"number\">0</span>, <span class=\"number\">0</span>, word);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">helper</span><span class=\"params\">(List&lt;String&gt; ret, String cur, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> num, String word)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> length = cur.length();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (start == word.length()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num != <span class=\"number\">0</span>) cur += num;</span><br><span class=\"line\">            ret.add(cur);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        helper(ret, cur, start + <span class=\"number\">1</span>, num + <span class=\"number\">1</span>, word);<span class=\"comment\">//Abbreviate it</span></span><br><span class=\"line\">        helper(ret, cur + (num == <span class=\"number\">0</span>?<span class=\"string\">\"\"</span>:num)+ word.charAt(start), start + <span class=\"number\">1</span>, <span class=\"number\">0</span>, word);<span class=\"comment\">//Don't abbreviate it.</span></span><br><span class=\"line\">        cur = cur.substring(<span class=\"number\">0</span>, length);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>AC2: Bit</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title\">generateAbbreviations</span><span class=\"params\">(String word)</span> </span>&#123;</span><br><span class=\"line\">        List&lt;String&gt; ret = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (word == <span class=\"keyword\">null</span> ) <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = word.length();</span><br><span class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        sb.append(<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt;len); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; len; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (((i &gt;&gt; j) &amp; <span class=\"number\">1</span>) == <span class=\"number\">0</span>) num++;</span><br><span class=\"line\">                <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    sb.append((num == <span class=\"number\">0</span>? <span class=\"string\">\"\"</span>:num));</span><br><span class=\"line\">                    sb.append(word.charAt(j));</span><br><span class=\"line\">                    num = <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (num != <span class=\"number\">0</span>) sb.append(num);</span><br><span class=\"line\">            ret.add(sb.toString());</span><br><span class=\"line\">            sb.setLength(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>用BT法求解取不取的问题，通常都可以用bit解。</p>\n"}