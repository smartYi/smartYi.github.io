{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":77},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":78}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":80}],"url":"/async/posts/2016/03/18/Zigzag-Iterator.json","date":1458349916000,"path":{"year":2016,"month":3,"day":18,"name":"Zigzag-Iterator"},"title":"Zigzag Iterator","permalink":"http://www.smartyi8979.com/2016/03/18/Zigzag-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two 1d vectors, implement an iterator to return their elements alternately.<br><a id=\"more\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For example, given two 1d vectors:</span><br><span class=\"line\"></span><br><span class=\"line\">v1 = [1, 2]</span><br><span class=\"line\">v2 = [3, 4, 5, 6]</span><br><span class=\"line\">By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1, 3, 2, 4, 5, 6].</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>因为只有两个List，所以只要来回在两个迭代器之间切换就好了。思路比较简单，但是要考虑各种corner case。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ZigzagIterator</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Iterator&lt;Integer&gt; iter1;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Iterator&lt;Integer&gt; iter2;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> exc;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ZigzagIterator</span><span class=\"params\">(List&lt;Integer&gt; v1, List&lt;Integer&gt; v2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v1 == <span class=\"keyword\">null</span> &amp;&amp; v2 == <span class=\"keyword\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.iter1 = v1.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.iter2 = v2.iterator();</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.exc = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">next</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Iterator&lt;Integer&gt; cur = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!iter1.hasNext() &amp;&amp; iter2.hasNext()) cur = iter2;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!iter2.hasNext() &amp;&amp; iter1.hasNext()) cur = iter1;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (iter1.hasNext() &amp;&amp; iter2.hasNext()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (exc % <span class=\"number\">2</span> == <span class=\"number\">1</span>) cur = iter1;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> cur = iter2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        exc++;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cur.next();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> iter1.hasNext() || iter2.hasNext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Your ZigzagIterator object will be instantiated and called as such:</span><br><span class=\"line\"> * ZigzagIterator i = new ZigzagIterator(v1, v2);</span><br><span class=\"line\"> * while (i.hasNext()) v[f()] = i.next();</span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n<p>follow-up。如果有多个List，其实只要用一个iterator的List就好了，可以实现在不同iterator之间的切换。</p>\n"}