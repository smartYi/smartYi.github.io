{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":64},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/18/Meeting-Rooms.json","date":1458306303000,"path":{"year":2016,"month":3,"day":18,"name":"Meeting-Rooms"},"title":"Meeting Rooms 1&2","permalink":"http://www.smartyi8979.com/2016/03/18/Meeting-Rooms/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>Given an array of meeting time intervals consisting of start and end times <code>[[s1,e1],[s2,e2],...] (si &lt; ei)</code>, determine if a person could attend all meetings.<br><a id=\"more\"></a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For example,</span><br><span class=\"line\">Given [[0, 30],[5, 10],[15, 20]],</span><br><span class=\"line\">return false.</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>遍历，看两个intervals之间是否有重叠部分，如果有，返回false。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Definition for an interval.</span><br><span class=\"line\"> * public class Interval &#123;</span><br><span class=\"line\"> *     int start;</span><br><span class=\"line\"> *     int end;</span><br><span class=\"line\"> *     Interval() &#123; start = 0; end = 0; &#125;</span><br><span class=\"line\"> *     Interval(int s, int e) &#123; start = s; end = e; &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canAttendMeetings</span><span class=\"params\">(Interval[] intervals)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (intervals == <span class=\"keyword\">null</span> || intervals.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        Arrays.sort(intervals, <span class=\"keyword\">new</span> Comparator&lt;Interval&gt;()&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Interval i1, Interval i2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i1.start == i2.start) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i1.end - i2.end;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i1.start - i2.start;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; intervals.length; i++) &#123;</span><br><span class=\"line\">            Interval last = intervals[i-<span class=\"number\">1</span>];</span><br><span class=\"line\">            Interval cur = intervals[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cur.start &lt; last.end) <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>记得排序就好。</p>\n<h4 id=\"Problem-2\"><a href=\"#Problem-2\" class=\"headerlink\" title=\"Problem 2:\"></a>Problem 2:</h4><p>Given an array of meeting time intervals consisting of start and end times <code>[[s1,e1],[s2,e2],...] (si &lt; ei)</code>, find the minimum number of conference rooms required.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">For example,</span><br><span class=\"line\">Given [[0, 30],[5, 10],[15, 20]],</span><br><span class=\"line\">return 2.</span><br></pre></td></tr></table></figure>\n<h4 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>有了上题的经验，我知道一上来就需要对数组进行排序。排序的一个很重要的结果就是保证最终得到的会议室数量最少。那么现在的问题就是把众多小会议合并成一个大会议，且各个会议之间不存在时间重叠，最后返回的会议室数量就是大会议的数量。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Definition for an interval.</span><br><span class=\"line\"> * public class Interval &#123;</span><br><span class=\"line\"> *     int start;</span><br><span class=\"line\"> *     int end;</span><br><span class=\"line\"> *     Interval() &#123; start = 0; end = 0; &#125;</span><br><span class=\"line\"> *     Interval(int s, int e) &#123; start = s; end = e; &#125;</span><br><span class=\"line\"> * &#125;</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">minMeetingRooms</span><span class=\"params\">(Interval[] intervals)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (intervals == <span class=\"keyword\">null</span> || intervals.length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        Arrays.sort(intervals, <span class=\"keyword\">new</span> Comparator&lt;Interval&gt;()&#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Interval i1, Interval i2)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i1.start == i2.start) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i1.end - i2.end;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i1.start - i2.start;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        List&lt;Interval&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        list.add(intervals[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; intervals.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> added = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            Interval cur = intervals[i];</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; list.size(); j++) &#123;</span><br><span class=\"line\">                Interval last = list.get(j);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cur.start &gt;= last.end) &#123;</span><br><span class=\"line\">                    Interval extend = <span class=\"keyword\">new</span> Interval(last.start, cur.end);</span><br><span class=\"line\">                    list.set(j, extend);</span><br><span class=\"line\">                    added = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!added) &#123;</span><br><span class=\"line\">                list.add(cur);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list.size();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不算很难的题目，重点在于知道先排序。</p>\n"}