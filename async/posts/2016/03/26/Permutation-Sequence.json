{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":74},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":75}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":77}],"url":"/async/posts/2016/03/26/Permutation-Sequence.json","date":1458964918000,"path":{"year":2016,"month":3,"day":26,"name":"Permutation-Sequence"},"title":"Permutation Sequence","permalink":"http://www.smartyi8979.com/2016/03/26/Permutation-Sequence/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>The set [1,2,3,…,n] contains a total of n! unique permutations.<br><a id=\"more\"></a></p>\n<p>By listing and labeling all of the permutations in order,<br>We get the following sequence (ie, for n = 3):</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;123&quot;</span><br><span class=\"line\">&quot;132&quot;</span><br><span class=\"line\">&quot;213&quot;</span><br><span class=\"line\">&quot;231&quot;</span><br><span class=\"line\">&quot;312&quot;</span><br><span class=\"line\">&quot;321&quot;</span><br></pre></td></tr></table></figure>\n<p>Given n and k, return the kth permutation sequence.</p>\n<h4 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h4><p>给出n和k，叫你找出第k个n的permutation。注意n只能是1到9之间的数。</p>\n<p>这道题目的数学气息很重，显然这不是在叫你求解某个数的所有permutation。当然你也可以将n的所有permutation求解出来然后返回第k个，如果这样做，这道题目就没有任何意义。所以必须另寻他法。<br>我们知道对于有着n的unique元素的集合来说，它的permutation是\\(n!\\)个。而且根据next permutation的定义以及给出的案例，我们可以分析得到，对于n来说，以1到n开头的permutation个数每个都是\\((n-1)!\\)个，这个不难推导。那既然是这样，我们就可以根据k的大小，然后判定它落在哪个区间，然后把该区间的元素添加进去即可。然后一直不断的迭代k，直至n个数全部添加完毕。<br>解释得有点抽象，自己可以在草稿纸上画一下和计算一下，就能明白上面的解释。</p>\n<p>AC:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getPermutation</span><span class=\"params\">(<span class=\"keyword\">int</span> n, <span class=\"keyword\">int</span> k)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span> || k &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        StringBuilder sb = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        List&lt;Integer&gt; num = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] fac = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n + <span class=\"number\">1</span>];</span><br><span class=\"line\">        fac[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">            num.add(i);</span><br><span class=\"line\">            fac[i] = fac[i - <span class=\"number\">1</span>] * i; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//事先k－1以保证不会越界访问。</span></span><br><span class=\"line\">        k--;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = n; i &gt; <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> index = k / fac[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">            k = k % fac[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">            sb.append(num.get(index));</span><br><span class=\"line\">            <span class=\"comment\">//每次将已经添加的元素从备选元素中删除。然后区间就会自动覆盖。</span></span><br><span class=\"line\">            num.remove(index);   </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sb.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}