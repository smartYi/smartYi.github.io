{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":64}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/15/Median-of-two-sorted-array.json","date":1458021468000,"path":{"year":2016,"month":3,"day":15,"name":"Median-of-two-sorted-array"},"title":"Median of two sorted array","permalink":"http://www.smartyi8979.com/2016/03/15/Median-of-two-sorted-array/","content":"<p><a href=\"https://leetcode.com/problems/median-of-two-sorted-arrays/\" target=\"_blank\" rel=\"external\">Leetcode链接/Median of two sorted array</a></p>\n<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p><strong>There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</strong><br><a id=\"more\"></a></p>\n<h4 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis:\"></a>Analysis:</h4><ol>\n<li>Merge these two sorted array, and find the median of the merged array. Time complexity of this method is <strong>O(m + n)</strong>, (m, n) is the array length respectively.</li>\n<li>Heap. Time complexity: <strong>O(m + n)</strong></li>\n<li>Binary Search. Time complexity is <strong>log(m+n)</strong></li>\n</ol>\n<h4 id=\"题目：\"><a href=\"#题目：\" class=\"headerlink\" title=\"题目：\"></a>题目：</h4><p>给定两个排好序的数组，找出这两个数组的中位数。</p>\n<h4 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h4><ol>\n<li>将两个数组合并，合并长度为奇数，返回中间值；否则返回中间两个数的平均数；</li>\n<li>构建最大堆和最小堆，保证最大堆和最小堆的大小在1以内，最后如果两个堆大小相同，返回两堆顶平均值；否则返回大的那堆的堆顶值；</li>\n<li>利用二分查找的方法不断缩小查找区间。</li>\n</ol>\n<p>第一和第二种方法比较简单，主要来分析第三种方案。<br>分析步骤如下：  </p>\n<ul>\n<li>First choose the median of the first sorted array, say the index is <strong><em>i</em></strong>, and then use formula <strong><em>j = k - 1 - i</em></strong> to determine the corresponding index in the second array;</li>\n<li>Compare these two elements, if the first element is bigger than the second one, which means all the elements in the second array before index <strong><em>j</em></strong> can be discarded and then update the parameters; Vice versa;</li>\n<li>After update the parameters and continue recursively find the target element;</li>\n</ul>\n<p>第一种方案AC代码：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">double</span> <span class=\"title\">mn</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span>[] nums2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> m = nums1.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = nums2.length;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] merge = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[m + n];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt; m &amp;&amp; j &lt; n) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums1[i] &lt; nums2[j]) &#123;</span><br><span class=\"line\">                merge[index++] = nums1[i++];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                merge[index++] = nums2[j++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; i &lt; m; i++) &#123;</span><br><span class=\"line\">            merge[index++] = nums1[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; j &lt; n; j++) &#123;</span><br><span class=\"line\">            merge[index++] = nums2[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((m + n) % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"keyword\">double</span>)(merge[(m+n)/<span class=\"number\">2</span>] + merge[(m+n)/<span class=\"number\">2</span> - <span class=\"number\">1</span>]) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> merge[(m+n)/<span class=\"number\">2</span>];</span><br><span class=\"line\">    &#125;     </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>第三种方案AC代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//This is log(m+n) solution.</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">double</span> <span class=\"title\">logmn</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span>[] nums2)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> l1 = nums1.length;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> l2 = nums2.length;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> ((l1 + l2) % <span class=\"number\">2</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> find(nums1, <span class=\"number\">0</span>, l1 - <span class=\"number\">1</span>, nums2, <span class=\"number\">0</span>, l2 - <span class=\"number\">1</span>, (l1 + l2) / <span class=\"number\">2</span>);</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> ((find(nums1, <span class=\"number\">0</span>, l1 - <span class=\"number\">1</span>, nums2, <span class=\"number\">0</span>, l2 - <span class=\"number\">1</span>, (l1 + l2) / <span class=\"number\">2</span> - <span class=\"number\">1</span>)) + </span><br><span class=\"line\">           (find(nums1, <span class=\"number\">0</span>, l1 - <span class=\"number\">1</span>, nums2, <span class=\"number\">0</span>, l2 - <span class=\"number\">1</span>, (l1 + l2) / <span class=\"number\">2</span>))) / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span>[] nums1, <span class=\"keyword\">int</span> s1, <span class=\"keyword\">int</span> e1, <span class=\"keyword\">int</span>[] nums2, <span class=\"keyword\">int</span> s2, <span class=\"keyword\">int</span> e2, <span class=\"keyword\">int</span> k)</span> </span><br><span class=\"line\">   </span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> aLength = e1 - s1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> bLength = e2 - s2 + <span class=\"number\">1</span>;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (aLength == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> nums2[s2 + k];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (bLength == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> nums1[s1 + k];</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (k == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">return</span> Math.min(nums1[s1], nums2[s2]);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> i = aLength * k / (aLength + bLength);</span><br><span class=\"line\">       <span class=\"keyword\">int</span> j = k - <span class=\"number\">1</span> - i;</span><br><span class=\"line\">       i = i + s1;</span><br><span class=\"line\">       j = j + s2;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (nums1[i] &gt; nums2[j]) &#123;</span><br><span class=\"line\">           k = k - ( j -  s2 + <span class=\"number\">1</span>);</span><br><span class=\"line\">           s2 = j + <span class=\"number\">1</span>;</span><br><span class=\"line\">           e1 = i;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">           k = k - (i - s1 + <span class=\"number\">1</span>);</span><br><span class=\"line\">           s1 = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">           e2 = j;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> find(nums1, s1, e1, nums2, s2, e2, k);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>这道题也算是面试高频题，还是比较难的，要经常温故。</p>\n"}