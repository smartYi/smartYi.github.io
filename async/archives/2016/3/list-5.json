{"year":"2016","month":"3","permalink":"http:/www.smartyi8979.com/archives/2016/3","_total":77,"_totalPage":8,"_page":5,"posts":[{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Binary-tree-path.json","date":1458238685000,"path":{"year":2016,"month":3,"day":17,"name":"Binary-tree-path"},"title":"Binary tree path","permalink":"http://www.smartyi8979.com/2016/03/17/Binary-tree-path/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a BST, find all paths from root to leaf.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Find-in-the-2D-matrix.json","date":1458238021000,"path":{"year":2016,"month":3,"day":17,"name":"Find-in-the-2D-matrix"},"title":"Search in the 2D matrix","permalink":"http://www.smartyi8979.com/2016/03/17/Find-in-the-2D-matrix/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:</p>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Kth-element-in-BST.json","date":1458193182000,"path":{"year":2016,"month":3,"day":17,"name":"Kth-element-in-BST"},"title":"Kth element in BST","permalink":"http://www.smartyi8979.com/2016/03/17/Kth-element-in-BST/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a BST and a number k, find the kth smallest element in the BST</p>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Summary-ranges.json","date":1458192998000,"path":{"year":2016,"month":3,"day":17,"name":"Summary-ranges"},"title":"Summary ranges","permalink":"http://www.smartyi8979.com/2016/03/17/Summary-ranges/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a sorted integer array without duplicates, return the summary of its ranges.  </p>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Basic-Calculator.json","date":1458191933000,"path":{"year":2016,"month":3,"day":17,"name":"Basic-Calculator"},"title":"Basic Calculator","permalink":"http://www.smartyi8979.com/2016/03/17/Basic-Calculator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a valid arithmetic equation, calculate the result.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Implement-Trie.json","date":1458191448000,"path":{"year":2016,"month":3,"day":17,"name":"Implement-Trie"},"title":"Implement Trie","permalink":"http://www.smartyi8979.com/2016/03/17/Implement-Trie/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement a trie with <code>insert, search</code>, and <code>startsWith</code> methods.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Number-of-Islands.json","date":1458190853000,"path":{"year":2016,"month":3,"day":17,"name":"Number-of-Islands"},"title":"Number of Islands I&II","permalink":"http://www.smartyi8979.com/2016/03/17/Number-of-Islands/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>Given a 2d grid map of ‘1’s (land) and ‘0’s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Binary-Search-Tree-Iterator.json","date":1458190168000,"path":{"year":2016,"month":3,"day":17,"name":"Binary-Search-Tree-Iterator"},"title":"Binary Search Tree Iterator","permalink":"http://www.smartyi8979.com/2016/03/17/Binary-Search-Tree-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.<br>Calling next() will return the next smallest number in the BST.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/17/Fraction-to-decimal.json","date":1458189293000,"path":{"year":2016,"month":3,"day":17,"name":"Fraction-to-decimal"},"title":"Fraction to decimal","permalink":"http://www.smartyi8979.com/2016/03/17/Fraction-to-decimal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two numbers, one is numerator and the other one is denominator.<br>return the fraction as string format.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":67},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":63}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":69}],"url":"/async/posts/2016/03/16/Peak-element.json","date":1458182531000,"path":{"year":2016,"month":3,"day":16,"name":"Peak-element"},"title":"Peak element","permalink":"http://www.smartyi8979.com/2016/03/16/Peak-element/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an array, find one peak element index and return;<br>"}]}