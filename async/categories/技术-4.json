{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75,"_total":75,"_totalPage":8,"_page":4,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/17/Longest-Increasing-Path-in-a-Matrix.json","date":1458263611000,"path":{"year":2016,"month":3,"day":17,"name":"Longest-Increasing-Path-in-a-Matrix"},"title":"Longest Increasing Path in a Matrix","permalink":"http://www.smartyi8979.com/2016/03/17/Longest-Increasing-Path-in-a-Matrix/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an integer matrix, find the length of the longest increasing path.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/23/Longest-Consecutive-Sequence.json","date":1458764755000,"path":{"year":2016,"month":3,"day":23,"name":"Longest-Consecutive-Sequence"},"title":"Longest Consecutive Sequence","permalink":"http://www.smartyi8979.com/2016/03/23/Longest-Consecutive-Sequence/","content":"<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>Given an unsorted array of integers, find the length of the longest consecutive elements sequence.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/17/Maximum-Product-of-Word-Lengths.json","date":1458262136000,"path":{"year":2016,"month":3,"day":17,"name":"Maximum-Product-of-Word-Lengths"},"title":"Maximum Product of Word Lengths","permalink":"http://www.smartyi8979.com/2016/03/17/Maximum-Product-of-Word-Lengths/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string array words, find the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/15/Median-of-two-sorted-array.json","date":1458021468000,"path":{"year":2016,"month":3,"day":15,"name":"Median-of-two-sorted-array"},"title":"Median of two sorted array","permalink":"http://www.smartyi8979.com/2016/03/15/Median-of-two-sorted-array/","content":"<p><a href=\"https://leetcode.com/problems/median-of-two-sorted-arrays/\">Leetcode链接/Median of two sorted array</a></p>\n<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p><strong>There are two sorted arrays nums1 and nums2 of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</strong><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/18/Meeting-Rooms.json","date":1458306303000,"path":{"year":2016,"month":3,"day":18,"name":"Meeting-Rooms"},"title":"Meeting Rooms 1&2","permalink":"http://www.smartyi8979.com/2016/03/18/Meeting-Rooms/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>Given an array of meeting time intervals consisting of start and end times <code>[[s1,e1],[s2,e2],...] (si &lt; ei)</code>, determine if a person could attend all meetings.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/16/Merge-Intervals.json","date":1458157916000,"path":{"year":2016,"month":3,"day":16,"name":"Merge-Intervals"},"title":"Merge Intervals","permalink":"http://www.smartyi8979.com/2016/03/16/Merge-Intervals/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a set of intervals, merge them if any of them overlap each other.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/16/Merge-k-Sorted-Lists.json","date":1458157439000,"path":{"year":2016,"month":3,"day":16,"name":"Merge-k-Sorted-Lists"},"title":"Merge k Sorted Lists","permalink":"http://www.smartyi8979.com/2016/03/16/Merge-k-Sorted-Lists/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given k sorted linkedlist, merge them into one sorted linkedlist and analyse the time complexity.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/16/Min-stack.json","date":1458181696000,"path":{"year":2016,"month":3,"day":16,"name":"Min-stack"},"title":"Min stack","permalink":"http://www.smartyi8979.com/2016/03/16/Min-stack/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/17/Minimum-Height-Trees.json","date":1458247614000,"path":{"year":2016,"month":3,"day":17,"name":"Minimum-Height-Trees"},"title":"Minimum Height Trees","permalink":"http://www.smartyi8979.com/2016/03/17/Minimum-Height-Trees/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p><a href=\"https://leetcode.com/problems/minimum-height-trees/\">Leetcode传送门</a><br>For a undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs). Given such a graph, write a function to find all the MHTs and return a list of their root labels.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":72},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":73}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":75}],"url":"/async/posts/2016/03/22/Number-of-Connected-Components-in-an-Undirected-Graph.json","date":1458700879000,"path":{"year":2016,"month":3,"day":22,"name":"Number-of-Connected-Components-in-an-Undirected-Graph"},"title":"Number of Connected Components in an Undirected Graph","permalink":"http://www.smartyi8979.com/2016/03/22/Number-of-Connected-Components-in-an-Undirected-Graph/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.<br>"}]}