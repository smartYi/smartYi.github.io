{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85,"_total":85,"_totalPage":9,"_page":3,"posts":[{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/23/Union-Find算法详解.json","date":1458743463000,"path":{"year":2016,"month":3,"day":23,"name":"Union-Find算法详解"},"title":"Union Find算法详解","permalink":"http://www.smartyi8979.com/2016/03/23/Union-Find算法详解/","content":"<p>本笔记来自于Robert Sedgewick算法中文版第四版。</p>\n<h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>问题是输入的是一系列整数对，每个整数代表某一种数据类型，一对整数对<code>[p,q]</code>可以理解为“p和q是相连的”，在这里我们定义的相连是一种等价关系：<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85},{"name":"转载","permalink":"http://www.smartyi8979.com/categories/技术/转载/","url":"/async/categories/转载.json","count":1}],"url":"/async/posts/2016/03/23/KMP算法详解.json","date":1458704513000,"path":{"year":2016,"month":3,"day":23,"name":"KMP算法详解"},"title":"KMP算法详解","permalink":"http://www.smartyi8979.com/2016/03/23/KMP算法详解/","content":"<p>本博文转载自 <strong><em>Matrix67: The Aha Moments</em></strong>， 查看原文<a href=\"http://www.matrix67.com/blog/archives/115\">请戳这里</a><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/23/Number-of-Connected-Components-in-an-Undirected-Graph.json","date":1458700879000,"path":{"year":2016,"month":3,"day":23,"name":"Number-of-Connected-Components-in-an-Undirected-Graph"},"title":"Number of Connected Components in an Undirected Graph","permalink":"http://www.smartyi8979.com/2016/03/23/Number-of-Connected-Components-in-an-Undirected-Graph/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given n nodes labeled from 0 to n - 1 and a list of undirected edges (each edge is a pair of nodes), write a function to find the number of connected components in an undirected graph.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/23/Generalized-Abbreviation.json","date":1458693227000,"path":{"year":2016,"month":3,"day":23,"name":"Generalized-Abbreviation"},"title":"Generalized Abbreviation","permalink":"http://www.smartyi8979.com/2016/03/23/Generalized-Abbreviation/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Write a function to generate the generalized abbreviations of a word.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/21/Shortest-Distance-from-All-Buildings.json","date":1458574958000,"path":{"year":2016,"month":3,"day":21,"name":"Shortest-Distance-from-All-Buildings"},"title":"Shortest Distance from All Buildings","permalink":"http://www.smartyi8979.com/2016/03/21/Shortest-Distance-from-All-Buildings/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>You want to build a house on an empty land which reaches all buildings in the shortest amount of distance. You can only move up, down, left and right. You are given a 2D grid of values 0, 1 or 2, where:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/21/Smallest-Rectangle-Enclosing-Black-Pixels.json","date":1458525333000,"path":{"year":2016,"month":3,"day":21,"name":"Smallest-Rectangle-Enclosing-Black-Pixels"},"title":"Smallest Rectangle Enclosing Black Pixels","permalink":"http://www.smartyi8979.com/2016/03/21/Smallest-Rectangle-Enclosing-Black-Pixels/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem :\"></a>Problem :</h4><p>An image is represented by a binary matrix with 0 as a white pixel and 1 as a black pixel. The black pixels are connected, i.e., there is only one black region. Pixels are connected horizontally and vertically. Given the location (x, y) of one of the black pixels, return the area of the smallest (axis-aligned) rectangle that encloses all black pixels.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/19/Binary-Tree-Longest-Consecutive-Sequence.json","date":1458356502000,"path":{"year":2016,"month":3,"day":19,"name":"Binary-Tree-Longest-Consecutive-Sequence"},"title":"Binary Tree Longest Consecutive Sequence","permalink":"http://www.smartyi8979.com/2016/03/19/Binary-Tree-Longest-Consecutive-Sequence/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem :\"></a>Problem :</h4><p>Given a binary tree, find the length of the longest consecutive sequence path.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/19/Unique-Word-Abbreviation.json","date":1458352910000,"path":{"year":2016,"month":3,"day":19,"name":"Unique-Word-Abbreviation"},"title":"Unique Word Abbreviation","permalink":"http://www.smartyi8979.com/2016/03/19/Unique-Word-Abbreviation/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem :\"></a>Problem :</h4><p>An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/19/Flip-Game.json","date":1458350843000,"path":{"year":2016,"month":3,"day":19,"name":"Flip-Game"},"title":"Flip Game 1&2","permalink":"http://www.smartyi8979.com/2016/03/19/Flip-Game/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>You are playing the following Flip Game with your friend: Given a string that contains only these two characters: <code>+</code> and <code>-</code>, you and your friend take turns to flip two consecutive <code>&quot;++&quot;</code> into <code>&quot;--&quot;</code>. The game ends when a person can no longer make a move and therefore the other person will be the winner.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/19/Zigzag-Iterator.json","date":1458349916000,"path":{"year":2016,"month":3,"day":19,"name":"Zigzag-Iterator"},"title":"Zigzag Iterator","permalink":"http://www.smartyi8979.com/2016/03/19/Zigzag-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given two 1d vectors, implement an iterator to return their elements alternately.<br>"}]}