{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83,"_total":83,"_totalPage":9,"_page":3,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/18/Graph-Valid-Tree.json","date":1458309628000,"path":{"year":2016,"month":3,"day":18,"name":"Graph-Valid-Tree"},"title":"Graph Valid Tree","permalink":"http://www.smartyi8979.com/2016/03/18/Graph-Valid-Tree/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given n nodes labeled from <code>0</code> to <code>n - 1</code> and a list of undirected edges (each edge is a pair of nodes), write a function to check whether these edges make up a valid tree.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/17/Group-Shifted-Strings.json","date":1458270330000,"path":{"year":2016,"month":3,"day":17,"name":"Group-Shifted-Strings"},"title":"Group Shifted Strings","permalink":"http://www.smartyi8979.com/2016/03/17/Group-Shifted-Strings/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string, we can “shift” each of its letter to its successive letter, for example: <code>&quot;abc&quot; -&gt; &quot;bcd&quot;</code>. We can keep “shifting” which forms the sequence:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/17/Implement-Trie.json","date":1458191448000,"path":{"year":2016,"month":3,"day":17,"name":"Implement-Trie"},"title":"Implement Trie","permalink":"http://www.smartyi8979.com/2016/03/17/Implement-Trie/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement a trie with <code>insert, search</code>, and <code>startsWith</code> methods.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/17/H-index.json","date":1458239760000,"path":{"year":2016,"month":3,"day":17,"name":"H-index"},"title":"H-index","permalink":"http://www.smartyi8979.com/2016/03/17/H-index/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher’s h-index.</p>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/16/Insert-intervals.json","date":1458158294000,"path":{"year":2016,"month":3,"day":16,"name":"Insert-intervals"},"title":"Insert intervals","permalink":"http://www.smartyi8979.com/2016/03/16/Insert-intervals/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a set of sorted intervals based on their start time and a new interval; insert this new interval and merge the intervals where necessary.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/17/Kth-element-in-BST.json","date":1458193182000,"path":{"year":2016,"month":3,"day":17,"name":"Kth-element-in-BST"},"title":"Kth element in BST","permalink":"http://www.smartyi8979.com/2016/03/17/Kth-element-in-BST/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a BST and a number k, find the kth smallest element in the BST</p>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83},{"name":"转载","permalink":"http://www.smartyi8979.com/categories/技术/转载/","url":"/async/categories/转载.json","count":1}],"url":"/async/posts/2016/03/22/KMP算法详解.json","date":1458704513000,"path":{"year":2016,"month":3,"day":22,"name":"KMP算法详解"},"title":"KMP算法详解","permalink":"http://www.smartyi8979.com/2016/03/22/KMP算法详解/","content":"<p>本博文转载自 <strong><em>Matrix67: The Aha Moments</em></strong>， 查看原文<a href=\"http://www.matrix67.com/blog/archives/115\">请戳这里</a><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/16/LRU.json","date":1458179799000,"path":{"year":2016,"month":3,"day":16,"name":"LRU"},"title":"LRU","permalink":"http://www.smartyi8979.com/2016/03/16/LRU/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Design and implement a LRU cache<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":80},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/15/Longest Substring-with-At-Most-Two-Distinct-Characters.json","date":1458072165000,"path":{"year":2016,"month":3,"day":15,"name":"Longest Substring-with-At-Most-Two-Distinct-Characters"},"title":"Longest Substring with At Most Two Distinct Characters","permalink":"http://www.smartyi8979.com/2016/03/15/Longest Substring-with-At-Most-Two-Distinct-Characters/","content":"<p><a href=\"https://leetcode.com/problems/longest-substring-with-at-most-two-distinct-characters/\">Leetcode链接/Longest Substring with At Most Two Distinct Characters</a></p>\n<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a string, find the length of the longest substring T that contains at most 2 distinct characters.<br>For example, Given <strong>s = “eceba”</strong>,<br>T is <strong>“ece”</strong> which its length is 3.<br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":81}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":83}],"url":"/async/posts/2016/03/16/LRU2.json","date":1458180516000,"path":{"year":2016,"month":3,"day":16,"name":"LRU2"},"title":"设计一个LRU Cache","permalink":"http://www.smartyi8979.com/2016/03/16/LRU2/","content":"<p>本笔记参考神奕<a href=\"http://songlee24.github.io/2015/05/10/design-LRU-Cache/\">博客</a></p>\n<h4 id=\"1-什么是Cache\"><a href=\"#1-什么是Cache\" class=\"headerlink\" title=\"1: 什么是Cache\"></a>1: 什么是Cache</h4><ol>\n<li>概念<br>Cache也就是高速缓存，它是介于CPU和内存之间的一种存储结构，在计算机系统的多级存储结构中，它的访问速度仅次于CPU寄存器。在计算机系统中，CPU的处理速度很快，但是系统对内存的访问以及数据的存取速度远远达不到CPU处理速度，因此高速缓存存在的目的就是减少计算机对内存的访问，使得数据访问速度尽可能的达到CPU处理速度。"}]}