{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85,"_total":85,"_totalPage":9,"_page":1,"posts":[{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/16/Basic-Calculator.json","date":1458191933000,"path":{"year":2016,"month":3,"day":16,"name":"Basic-Calculator"},"title":"Basic Calculator","permalink":"http://www.smartyi8979.com/2016/03/16/Basic-Calculator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a valid arithmetic equation, calculate the result.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/3Sum-Smaller.json","date":1458308024000,"path":{"year":2016,"month":3,"day":18,"name":"3Sum-Smaller"},"title":"3Sum Smaller","permalink":"http://www.smartyi8979.com/2016/03/18/3Sum-Smaller/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an array of <code>n</code> integers nums and a target, find the number of index triplets <code>i, j, k</code> with <code>0 &lt;= i &lt; j &lt; k &lt; n</code> that satisfy the condition <code>nums[i] + nums[j] + nums[k] &lt; target</code>.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/26/Add-and-Search-Word.json","date":1459041693000,"path":{"year":2016,"month":3,"day":26,"name":"Add-and-Search-Word"},"title":"Add and Search Word - Data structure design","permalink":"http://www.smartyi8979.com/2016/03/26/Add-and-Search-Word/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Design a data structure that supports the following two operations:<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Alien-Dictionary.json","date":1458313619000,"path":{"year":2016,"month":3,"day":18,"name":"Alien-Dictionary"},"title":"Alien Dictionary","permalink":"http://www.smartyi8979.com/2016/03/18/Alien-Dictionary/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>There is a new alien language which uses the latin alphabet. However, the order among letters are unknown to you. You receive a list of words from the dictionary, where words are sorted lexicographically by the rules of this new language. Derive the order of letters in this language.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown.json","date":1458247259000,"path":{"year":2016,"month":3,"day":17,"name":"Best-Time-to-Buy-and-Sell-Stock-with-Cooldown"},"title":"Best Time to Buy and Sell Stock with Cooldown","permalink":"http://www.smartyi8979.com/2016/03/17/Best-Time-to-Buy-and-Sell-Stock-with-Cooldown/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Say you have an array for which the ith element is the price of a given stock on day i.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/18/Binary-Tree-Longest-Consecutive-Sequence.json","date":1458356502000,"path":{"year":2016,"month":3,"day":18,"name":"Binary-Tree-Longest-Consecutive-Sequence"},"title":"Binary Tree Longest Consecutive Sequence","permalink":"http://www.smartyi8979.com/2016/03/18/Binary-Tree-Longest-Consecutive-Sequence/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem :\"></a>Problem :</h4><p>Given a binary tree, find the length of the longest consecutive sequence path.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/30/Binary-Search-Summary.json","date":1459394840000,"path":{"year":2016,"month":3,"day":30,"name":"Binary-Search-Summary"},"title":"Binary Search Summary","permalink":"http://www.smartyi8979.com/2016/03/30/Binary-Search-Summary/","content":"<p>本文转载于:<a href=\"http://www.tangjikai.com/algorithms/leetcode-binary-search\">戳这里</a><br>"},{"tags":[{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83},{"name":"树","permalink":"http://www.smartyi8979.com/tags/树/","url":"/async/tags/树.json","count":1}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/14/Binary-indexed-tree.json","date":1458015320000,"path":{"year":2016,"month":3,"day":14,"name":"Binary-indexed-tree"},"title":"Binary indexed tree (Fenwick tree)","permalink":"http://www.smartyi8979.com/2016/03/14/Binary-indexed-tree/","content":""},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/16/Binary-Search-Tree-Iterator.json","date":1458190168000,"path":{"year":2016,"month":3,"day":16,"name":"Binary-Search-Tree-Iterator"},"title":"Binary Search Tree Iterator","permalink":"http://www.smartyi8979.com/2016/03/16/Binary-Search-Tree-Iterator/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.<br>Calling next() will return the next smallest number in the BST.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"Google","permalink":"http://www.smartyi8979.com/tags/Google/","url":"/async/tags/Google.json","count":61},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":83}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/17/Binary-tree-path.json","date":1458238685000,"path":{"year":2016,"month":3,"day":17,"name":"Binary-tree-path"},"title":"Binary tree path","permalink":"http://www.smartyi8979.com/2016/03/17/Binary-tree-path/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a BST, find all paths from root to leaf.<br>"}]}