{"_total":131,"_totalPage":14,"_page":4,"posts":[{"tags":[],"categories":[],"url":"/async/posts/2016/07/26/NIO详解.json","date":1469535925000,"path":{"year":2016,"month":7,"day":26,"name":"NIO详解"},"title":"","permalink":"http://www.smartyi8979.com/2016/07/26/NIO详解/","content":""},{"tags":[{"name":"319Morewood杂记","permalink":"http://www.smartyi8979.com/tags/319Morewood杂记/","url":"/async/tags/319Morewood杂记.json","count":2}],"categories":[{"name":"以为感悟生活","permalink":"http://www.smartyi8979.com/categories/以为感悟生活/","url":"/async/categories/以为感悟生活.json","count":18}],"url":"/async/posts/2016/04/23/319Morewood杂记（二）.json","date":1461450898000,"path":{"year":2016,"month":4,"day":23,"name":"319Morewood杂记（二）"},"title":"319Morewood 杂记（二）","permalink":"http://www.smartyi8979.com/2016/04/23/319Morewood杂记（二）/","content":"<blockquote>\n<p>非其鬼而祭之，曰谄</p>\n</blockquote>"},{"tags":[{"name":"319Morewood杂记","permalink":"http://www.smartyi8979.com/tags/319Morewood杂记/","url":"/async/tags/319Morewood杂记.json","count":2}],"categories":[{"name":"以为感悟生活","permalink":"http://www.smartyi8979.com/categories/以为感悟生活/","url":"/async/categories/以为感悟生活.json","count":18}],"url":"/async/posts/2016/04/17/319Morewood杂记（一）.json","date":1460935211000,"path":{"year":2016,"month":4,"day":17,"name":"319Morewood杂记（一）"},"title":"319Morewood 杂记（一）","permalink":"http://www.smartyi8979.com/2016/04/17/319Morewood杂记（一）/","content":"<blockquote>\n<p>春有百花秋有月<br>夏有凉风冬有雪<br>若无闲事挂心头<br>便是人间好时节  </p>\n</blockquote>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/04/01/Simplify-Path.json","date":1459566233000,"path":{"year":2016,"month":4,"day":1,"name":"Simplify-Path"},"title":"Simplify Path","permalink":"http://www.smartyi8979.com/2016/04/01/Simplify-Path/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given an absolute path for a file (Unix-style), simplify it.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/30/Binary-Search-Summary.json","date":1459394840000,"path":{"year":2016,"month":3,"day":30,"name":"Binary-Search-Summary"},"title":"Binary Search Summary","permalink":"http://www.smartyi8979.com/2016/03/30/Binary-Search-Summary/","content":"<p>本文转载于:<a href=\"http://www.tangjikai.com/algorithms/leetcode-binary-search\">戳这里</a><br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/30/Multiply-Strings.json","date":1459392619000,"path":{"year":2016,"month":3,"day":30,"name":"Multiply-Strings"},"title":"Multiply Strings","permalink":"http://www.smartyi8979.com/2016/03/30/Multiply-Strings/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given two numbers represented as strings, return multiplication of the numbers as a string.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/30/Longest-Substring-Without-Repeating-Characters.json","date":1459386801000,"path":{"year":2016,"month":3,"day":30,"name":"Longest-Substring-Without-Repeating-Characters"},"title":"Longest Substring Without Repeating Characters","permalink":"http://www.smartyi8979.com/2016/03/30/Longest-Substring-Without-Repeating-Characters/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><p>Given a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for “abcabcbb” is “abc”, which the length is 3. For “bbbbb” the longest substring is “b”, with the length of 1.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/29/House-Robber.json","date":1459277132000,"path":{"year":2016,"month":3,"day":29,"name":"House-Robber"},"title":"House Robber I&&II&&III","permalink":"http://www.smartyi8979.com/2016/03/29/House-Robber/","content":"<h4 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem 1:\"></a>Problem 1:</h4><p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/29/Count-Complete-Tree-Nodes.json","date":1459268654000,"path":{"year":2016,"month":3,"day":29,"name":"Count-Complete-Tree-Nodes"},"title":"Count Complete Tree Nodes","permalink":"http://www.smartyi8979.com/2016/03/29/Count-Complete-Tree-Nodes/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>Given a complete binary tree, count the number of nodes.<br>"},{"tags":[{"name":"Leetcode","permalink":"http://www.smartyi8979.com/tags/Leetcode/","url":"/async/tags/Leetcode.json","count":82},{"name":"算法","permalink":"http://www.smartyi8979.com/tags/算法/","url":"/async/tags/算法.json","count":84}],"categories":[{"name":"技术","permalink":"http://www.smartyi8979.com/categories/技术/","url":"/async/categories/技术.json","count":85}],"url":"/async/posts/2016/03/28/Tree-Traversal.json","date":1459217721000,"path":{"year":2016,"month":3,"day":28,"name":"Tree-Traversal"},"title":"Tree Traversal","permalink":"http://www.smartyi8979.com/2016/03/28/Tree-Traversal/","content":"<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem:\"></a>Problem:</h4><p>这里把二叉树的前序，中序以及后序遍历的递归和迭代解法分别给出，此外还有二叉树的层序遍历，这是很多二叉树其他算法的基础。<br>"}]}